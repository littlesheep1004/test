name: Run API Tests with Allure Report

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  run-api-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      # 🔍 调试：确认 allure 插件安装
      - name: Verify allure-pytest
        run: |
          pip show allure-pytest
          python -c "import allure_pytest; print('✅ allure-pytest loaded')"
          pip show allure-python-commons

      # 🧪 运行测试
      - name: Run pytest with Allure
        run: |
          pytest tests/test_login.py -v --tb=short --alluredir=allure-results
          echo "📁 allure-results content:"
          ls -la allure-results/
          find allure-results -name "*.json" -type f -exec basename {} \;

      # 🔍 检查结果是否为空
      - name: Check Allure Results Not Empty
        run: |
          if [ ! "$(ls -A allure-results 2>/dev/null)" ]; then
            echo "❌ Error: allure-results is empty! Did tests run?"
            exit 1
          fi

      # 📦 安装 Allure CLI
      - name: Download and Setup Allure CLI
        run: |
          wget https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.22.0/allure-commandline-2.22.0.zip
          unzip allure-commandline-*.zip -d allure-cli
          chmod +x allure-cli/allure-*/bin/allure
          # 添加到 PATH
          echo "$(pwd)/allure-cli/allure-2.22.0/bin" >> $GITHUB_PATH

      # 📊 生成报告
      - name: Generate Allure Report
        run: |
          allure generate allure-results -o allure-report --clean
          echo "✅ Allure report generated at allure-report/"

      # 📤 上传报告
      - name: Upload Allure HTML Report
        uses: actions/upload-artifact@v4
        with:
          name: allure-html-report
          path: allure-report/
          retention-days: 7
